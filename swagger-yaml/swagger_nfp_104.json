---
swagger: "2.0"
info:
  version: "1.0.4"
  title: "NFP Data transfer API 104"
host: "api.nursefamilypartnership.org"
basePath: "/dev"
schemes:
- "https"
paths:
  /get/Pseudonym:
    get:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Assessment"
        in: "query"
        required: true
        type: "string"
      responses:
        200:
          description: "200 response"
          schema:
            $ref: "#/definitions/ArrayOfPseudonym"
        500:
          description: "500 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /post/Agency:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Agency"
        required: true
        schema:
          $ref: "#/definitions/Agency"
      responses:
        200:
          description: "200 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /post/Assessment:
    post:
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "Assessment"
        required: true
        schema:
          $ref: "#/definitions/Assessment"
      responses:
        200:
          description: "200 response"
        500:
          description: "500 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n\
            ##  This template will pass through all parameters including path, querystring,\
            \ header, stage variables, and context through to the integration endpoint\
            \ via the body/payload\n#set($allParams = $input.params())\n{\n\"body-json\"\
            \ : $input.json('$'),\n\"params\" : {\n#foreach($type in $allParams.keySet())\n\
            \    #set($params = $allParams.get($type))\n\"$type\" : {\n    #foreach($paramName\
            \ in $params.keySet())\n    \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\
            \n        #if($foreach.hasNext),#end\n    #end\n}\n    #if($foreach.hasNext),#end\n\
            #end\n},\n\"stage-variables\" : {\n#foreach($key in $stageVariables.keySet())\n\
            \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n   \
            \ #if($foreach.hasNext),#end\n#end\n},\n\"context\" : {\n    \"account-id\"\
            \ : \"$context.identity.accountId\",\n    \"api-id\" : \"$context.apiId\"\
            ,\n    \"api-key\" : \"$context.identity.apiKey\",\n    \"authorizer-principal-id\"\
            \ : \"$context.authorizer.principalId\",\n    \"caller\" : \"$context.identity.caller\"\
            ,\n    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\"\
            ,\n    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\"\
            ,\n    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\"\
            ,\n    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\"\
            ,\n    \"http-method\" : \"$context.httpMethod\",\n    \"stage\" : \"\
            $context.stage\",\n    \"source-ip\" : \"$context.identity.sourceIp\"\
            ,\n    \"user\" : \"$context.identity.user\",\n    \"user-agent\" : \"\
            $context.identity.userAgent\",\n    \"user-arn\" : \"$context.identity.userArn\"\
            ,\n    \"request-id\" : \"$context.requestId\",\n    \"resource-id\" :\
            \ \"$context.resourceId\",\n    \"resource-path\" : \"$context.resourcePath\"\
            \n    }\n}\n"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:312517840624:function:post_assessment/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
  /post/Child:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Child"
        required: true
        schema:
          $ref: "#/definitions/Child"
      responses:
        200:
          description: "200 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /post/Client:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Client"
        required: true
        schema:
          $ref: "#/definitions/Client"
      responses:
        200:
          description: "200 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "{\"statusCode\": 200}"
        passthroughBehavior: "when_no_match"
        type: "mock"
  /post/Nurse:
    post:
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Nurse"
        required: true
        schema:
          $ref: "#/definitions/Nurse"
      responses:
        200:
          description: "200 response"
      security:
      - api_key: []
      x-amazon-apigateway-request-validator: "Validate body, query string parameters,\
        \ and headers"
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: "200"
        requestTemplates:
          application/json: "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n\
            ##  This template will pass through all parameters including path, querystring,\
            \ header, stage variables, and context through to the integration endpoint\
            \ via the body/payload\n#set($allParams = $input.params())\n{\n\"body-json\"\
            \ : $input.json('$'),\n\"params\" : {\n#foreach($type in $allParams.keySet())\n\
            \    #set($params = $allParams.get($type))\n\"$type\" : {\n    #foreach($paramName\
            \ in $params.keySet())\n    \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\
            \n        #if($foreach.hasNext),#end\n    #end\n}\n    #if($foreach.hasNext),#end\n\
            #end\n},\n\"stage-variables\" : {\n#foreach($key in $stageVariables.keySet())\n\
            \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n   \
            \ #if($foreach.hasNext),#end\n#end\n},\n\"context\" : {\n    \"account-id\"\
            \ : \"$context.identity.accountId\",\n    \"api-id\" : \"$context.apiId\"\
            ,\n    \"api-key\" : \"$context.identity.apiKey\",\n    \"authorizer-principal-id\"\
            \ : \"$context.authorizer.principalId\",\n    \"caller\" : \"$context.identity.caller\"\
            ,\n    \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\"\
            ,\n    \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\"\
            ,\n    \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\"\
            ,\n    \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\"\
            ,\n    \"http-method\" : \"$context.httpMethod\",\n    \"stage\" : \"\
            $context.stage\",\n    \"source-ip\" : \"$context.identity.sourceIp\"\
            ,\n    \"user\" : \"$context.identity.user\",\n    \"user-agent\" : \"\
            $context.identity.userAgent\",\n    \"user-arn\" : \"$context.identity.userArn\"\
            ,\n    \"request-id\" : \"$context.requestId\",\n    \"resource-id\" :\
            \ \"$context.resourceId\",\n    \"resource-path\" : \"$context.resourcePath\"\
            \n    }\n}\n"
        uri: "arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:312517840624:function:post_nurse/invocations"
        passthroughBehavior: "when_no_templates"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws"
securityDefinitions:
  api_key:
    type: "apiKey"
    name: "x-api-key"
    in: "header"
definitions:
  Agency:
    type: "object"
    required:
    - "AGENCY_DATE_FIRST_HOME_VISIT"
    - "AGENCY_INFO_1_INITIATION_DATE"
    - "AGENCY_INFO_1_LOWINCOME_CRITERA"
    - "AGENCY_INFO_1_LOWINCOME_DESCRIPTION"
    - "AGENCY_INFO_1_LOWINCOME_PERCENT"
    - "Agency_ID"
    - "Agency_Name"
    - "Agency_Type"
    - "Counties_Served"
    - "Data_Source"
    - "Phone_Number"
    properties:
      Agency_ID:
        type: "string"
        description: "Unique ID assigned to each Implementing Agency pseudonym = Site_ID"
      Agency_Name:
        type: "string"
        description: "Name of Implementing Agency pseudonym = AGENCY_INFO_0_NAME,Site_Name "
      Address:
        $ref: "#/definitions/Agency_Address"
      Phone_Number:
        type: "number"
        description: "Agency's Phone number pseudonym = Phone1"
      Agency_Type:
        type: "string"
        description: "Type of Organization Psuedonym = AGENCY_INFO_1_TYPE"
        enum:
        - "Public Health"
        - "Agency or Clinic"
        - "Hospital"
        - "Community Based Organization"
      AGENCY_INFO_1_LOWINCOME_CRITERA:
        type: "string"
        description: "Low-income criteria used for eligibility"
      AGENCY_INFO_1_LOWINCOME_PERCENT:
        type: "string"
        description: "Low-income criteria used for eligibility"
      AGENCY_INFO_1_LOWINCOME_DESCRIPTION:
        type: "string"
        description: "Low-income criteria used for eligibility"
      AGENCY_INFO_1_WEBSITE:
        type: "string"
        description: "Implementing Agency Website"
      SERVICE_LEVEL_COVERED:
        type: "string"
        description: "Service level Implementing Agency Covers"
        enum:
        - "City"
        - "County"
        - "Parish"
        - "Region"
        - "Tribe"
      Counties_Served:
        type: "string"
      AGENCY_INFO_1_INITIATION_DATE:
        type: "string"
        format: "date"
        description: "Date Implementing Agency began implementing NFP"
      AGENCY_DATE_FIRST_HOME_VISIT:
        type: "string"
        format: "date"
        description: "Date of the first home visit at that Implementing Agency"
      Data_Source:
        type: "string"
        description: "Source system that the data originates from "
  ArrayOfPseudonym:
    type: "object"
  Assessment:
    type: "object"
    required:
    - "Agency_ID"
    - "Assessment_Date"
    - "Assessment_ID"
    - "Assessment_Name"
    - "Assessment_Question"
    - "Assessment_Type"
    - "Client_ID"
    - "Data_Source"
    - "Nurse_ID"
    - "Program_ID"
    - "Pseudonym_Responses"
    - "Question_ID"
    properties:
      Assessment_ID:
        type: "string"
      Assessment_Name:
        type: "string"
      Nurse_ID:
        type: "string"
        description: "Unique ID assigned to each nurse"
      Client_ID:
        type: "string"
        description: "Unique ID assigned to each Client pseudonym =  CLIENT_0_ID_AGENCY,\
          \ Client_Id, CL_EN_GEN_ID"
      Agency_ID:
        type: "string"
        description: "Unique ID assigned to each Implementing Agency pseudonym = Site_ID"
      Infant_ID:
        type: "string"
        description: "Unique ID ssigned to each child pseudonym = INFANT_0_ID_NSO\
          \ INFANT_0_ID_NSO2 INFANT_0_ID_NSO3"
      Assessment_Date:
        type: "string"
        format: "date"
        description: "Date the assessment was completed pseudonym = SureyDate"
      Assessment_Question:
        type: "string"
        description: " Pseudo associated to each question on specific assessment"
      Program_ID:
        type: "string"
        description: "Unique ID assigned to each Team/Program at the specific Implementing\
          \ Agency pseudonym = ProgramID"
      Question_ID:
        type: "string"
        description: " Unique ID assigned to each question"
      Response_ID:
        type: "string"
        description: "Unique ID assigned to each response "
      Assessment_Type:
        type: "string"
        description: "This will identify if this is a new assessment or if an update\
          \ has been made to an assessment already submitted"
        enum:
        - "New"
        - "Update"
      Data_Source:
        type: "string"
        description: "Source system that the data originates from"
      Pseudonym_Responses:
        type: "string"
  Client:
    type: "object"
    required:
    - "Agency_ID"
    - "Cell_Phone"
    - "Client_DOB"
    - "Client_EDD"
    - "Client_ID"
    - "Data_Source"
    - "Ethnicity"
    - "First_Name"
    - "Last_Name"
    - "Primary_Language"
    - "Race"
    - "Type_Of_Record"
    properties:
      Type_Of_Record:
        type: "string"
        description: "What type of record New or Update"
        enum:
        - "NEW"
        - "UPDATE"
      Client_ID:
        type: "string"
        description: "Unique NPF Client Identifier - pseudonym = CL_EN_GEN_ID, Client_Id,\
          \ CLIENT_0_AGENCY"
      Agency_ID:
        type: "string"
        description: "The unique identifier from the source system - pseudonym = Site_ID"
      Data_Source:
        type: "string"
        description: "Source system that data originates from"
      First_Name:
        type: "string"
        description: "Client's First Name"
      Last_Name:
        type: "string"
        description: "Client's Last Name"
      Client_DOB:
        type: "string"
        format: "date"
        description: "Client's Date of Birth"
      Client_SSN:
        type: "integer"
        description: "Client's Social Security Number"
      Address:
        $ref: "#/definitions/Client_Address"
      Email:
        type: "string"
        description: "Client's Address"
      Home_Phone:
        type: "number"
        description: "Client's Home Phone Number"
      Work_phone:
        type: "number"
        description: "Client's Work Phone Number"
      Cell_Phone:
        type: "number"
        description: "Client's Cell Phone Number - pseudonym = REFERRAL_PROSPECT_DEMO_1_CELL"
      Client_EDD:
        type: "string"
        format: "date"
        description: "Client's estimated due date  - pseudonym = REFERRAL_PROSPECT_DEMO_1_EDD"
      Primary_Language:
        type: "string"
        description: "Client's primary language - pseudonym = DEMO_CLIENT_INTAKE_0_LANGUAGE"
        enum:
        - "English"
        - "Spanish"
        - "Arabic"
        - "Cantonese"
        - "French"
        - "Hindi"
        - "Italian"
        - "Japanese"
        - "Korean"
        - "Mandarin"
        - "Polish"
        - "Russian"
        - "Tagalog"
        - "Tribal Languages"
        - "Vietnamese"
        - "Other"
      Ethnicity:
        type: "string"
        description: "Client's Ethnicity - pseudonym = DEMO_CLIENT_INTAKE_0_ETHNICITY"
        enum:
        - "Hispanic or Latina"
        - "Not Hispanic or Latina"
        - "Declined to self-identify"
      Race:
        type: "string"
        description: "Client's race, can be more than one - pseudonym = DEMO_CLIENT_INTAKE_0_RACE"
        enum:
        - "American Indian or Alaska Native"
        - "Asian"
        - "Black or African American"
        - "Native Hawaiian or other Pacific Islander"
        - "White"
  Child:
    type: "object"
    required:
    - "Agency_ID"
    - "Data_Source"
    - "Ethnicity"
    - "Gender"
    - "Infant_DOB"
    - "Infant_First_Name"
    - "Infant_ID"
    - "Infant_Last_Name"
    - "Race"
    - "Type_Of_Record"
    properties:
      Data_Source:
        type: "string"
        description: "Source system the data originates from"
      Type_Of_Record:
        type: "string"
        description: "What type of record New or Update"
        enum:
        - "NEW"
        - "UPDATE"
      Infant_ID:
        type: "string"
        description: "Unique ID assigned to each child by source system pseudonym\
          \ = INFANT_0_ID_NSO,INFANT_0_ID_NSO2,INFANT_0_ID_NSO3"
      Agency_ID:
        type: "string"
        description: " IA that the client is associated with pseudonym = Site_ID"
      Infant_First_Name:
        type: "string"
        description: "Child's First Name pseudonym =  INFANT_PERSONAL_0_FIRSTNAME,INFANT_PERSONAL_0_FIRSTNAME2,INFANT_PERSONAL_0_FIRSTNAME3"
      Infant_Last_Name:
        type: "string"
        description: "Child's Last Name pseudonym =  INFANT_PERSONAL_0_LAST NAME"
      Infant_DOB:
        type: "string"
        format: "date"
        description: "Child's Date of Birth pseudonym =  INFANT_BIRTH_0_DOB,INFANT_BIRTH_0_DOB2,INFANT_BIRTH_0_DOB3 "
      Ethnicity:
        type: "string"
        description: "Child's Ethnicity - pseudonym =  INFANT_PERSONAL_0_ETHNICITY,\
          \  INFANT_PERSONAL_0_ETHNICITY2, INFANT_PERSONAL_0_ETHNICITY3"
        enum:
        - "Hispanic or Latina"
        - "Not Hispanic or Latina"
        - "Declined to self-identify"
      Gender:
        type: "string"
        description: "Child's Gender pseudonym = INFANT_PERSONAL_0_GENDER,INFANT_PERSONAL_0_GENDER2,\
          \ INFANT_PERSONAL_0_GENDER3"
        enum:
        - "Male"
        - "Female"
      Race:
        type: "string"
        description: "Child's race, can be more than one - pseudonym = INFANT_PERSONAL_0_RACE,\
          \ INFANT_PERSONAL_0_RACE2,INFANT_PERSONAL_0_RACE3"
        enum:
        - "American Indian or Alaska Native"
        - "Asian"
        - "Black or African American"
        - "Native Hawaiian or other Pacific Islander"
        - "White"
  Nurse:
    type: "object"
    required:
    - "Agency_ID"
    - "Data_Source"
    - "Email"
    - "FTE_Primary_Role"
    - "First_Name"
    - "Last_Name"
    - "NFP_Start_Date"
    - "Nurse_ID"
    - "Nursing_Degree"
    - "Primary_Role"
    - "Type_Of_Record"
    properties:
      Type_Of_Record:
        type: "string"
        description: "What type of record New or Update"
        enum:
        - "NEW"
        - "UPDATE"
      Nurse_ID:
        type: "string"
        description: "Unique NPF Nurse Identifier, Pseudonym ="
      Agency_ID:
        type: "string"
        description: "The unique identifier from the source system pseudonym = Site_ID"
      First_Name:
        type: "string"
        description: "Nurse's First Name"
      Middle_Name:
        type: "string"
        description: "Nurse's Middle Name"
      Last_Name:
        type: "string"
        description: "Nurse's Last Name"
      NFP_Start_Date:
        type: "string"
        format: "date"
        description: "Date Nurse Started at NFP - pseudonym = START_DATE"
      NFP_End_Date:
        type: "string"
        format: "date"
        description: "Date Nurse Ended work at NFP - pseudonym = NURSE_STATUS_0_CHANGE_TERMINATE_DATE"
      Email:
        type: "string"
        description: "Nurse's email address"
      Gender:
        type: "string"
        description: "Nurse's Gender which can only be Male or Female - pseudonym\
          \ = NURSE_0_GENDER"
        enum:
        - "Male"
        - "Female"
      Ethnicity:
        type: "string"
        description: "Ethnicity of Nurse  - pseudonym = NURSE_0_ETHNICITY"
        enum:
        - "Hispanic or Latina"
        - "Not Hispanic or Latina"
        - "Declined to self-identify"
      Race:
        type: "string"
        description: "Nurse's Race, can be more than 1 - pseudonym = NURSE_1_RACE_0,NURSE_1_RACE_1,NURSE_1_RACE_3,NURSE_1_RACE_4,NURSE_1_RACE_5"
        enum:
        - "American Indian or Alaska Native"
        - "Asian"
        - "Black or African American"
        - "Native Hawaiian or other Pacific Islander"
        - "White"
      Primary_Language:
        type: "string"
        description: "The primary language of the nurse.  - pseudonym = NURSE_0_LANGUAGE"
        enum:
        - "English"
        - "Spanish"
        - "Other"
      Nursing_Experience_Years:
        type: "integer"
        description: "The number of year(s) the nurse has practiced nursing  - pseudonym\
          \ = NURSE_0_YEAR_NURSING_EXPERIENCE"
      Maternal_Health_Experience_Years:
        type: "integer"
        description: "The number of year(s) the nurse has worked with maternal health\
          \ populations - pseudonym = NURSE_0_YEAR_MATERNAL_EXPERIENCE"
      Public_Community_Experience_Years:
        type: "integer"
        description: "The number of year(s) the nurse has worked in public or community\
          \ health - pseudonym = NURSE_0_YEAR_COMMHEALTH_EXPERIENCE"
      Supervisor_Experience_Years:
        type: "integer"
        description: "The number of year(s) the nurse has been in a supervisory role\
          \ - pseudonym = NURSE_0_YEAR_SUPERVISOR_EXPERIENCE"
      Birth_Year:
        type: "integer"
        description: "The year the nurse was born - pseudonym = NURSE_0_BIRTH_YEAR"
      Nursing_Degree:
        type: "string"
        description: "The highest level of degree in a nursing related field - pseudonym\
          \ = NURSE_EDUCATION_0_NURSING_DEGREES"
        enum:
        - "Diploma"
        - "Associate Degree"
        - "Bachelors' Degree"
        - "Master's Degree"
        - "ND or DNP"
        - "PhD or DNS"
        - "Not applicable"
      Other_Degree:
        type: "string"
        description: "The highest level of degree in other field(s) outside of nursing\
          \ - pseudonym = NURSE_EDUCATION_1_OTHER_DEGREES"
        enum:
        - "Associate Degree"
        - "Bachelors' Degree"
        - "Master's Degree"
        - "Professional Degree"
        - "Doctorate Degree"
        - "Not applicable"
      Primary_Role:
        type: "string"
        description: "The main role of the nurse in the NHP program - pseudonym =\
          \ NURSE_PRIMARY_ROLE"
        enum:
        - "Nurse Supervisor"
        - "Nurse Home Visitor"
        - "Data Entry/Administrative"
        - "Agency Administrator"
        - "State Administrator"
        - "State Nurse Consultant"
        - "Program Coordinator/Manager"
        - "NFP Partner"
        - "Agency Other"
        - "Other"
      Secondary_Role:
        type: "string"
        description: "The nurse's secondary role in the NHP program - pseudonym =\
          \ NURSE_SECONDARY_ROLE"
        enum:
        - "Nurse Supervisor"
        - "Nurse Home Visitor"
        - "Data Entry/Administrative"
        - "Agency Administrator"
        - "State Administrator"
        - "State Nurse Consultant"
        - "Program Coordinator/Manager"
        - "NFP Partner"
        - "Agency Other"
        - "Other"
      FTE_Primary_Role:
        type: "integer"
        description: "FTE associated with the nurse's Primary Role - pseudonym = NURSE_PRIMARY_ROLE_FTE"
      FTE_Secondary_Role:
        type: "integer"
        description: "FTE associated with the nurse's Secondary Role - pseudonym =\
          \ NURSE_SECONDARY_ROLE_FTE"
      Role_Start_Date:
        type: "string"
        format: "date"
        description: "The date a nurse changes to a new role - pseudonym = NURSE_STATUS_0_CHANGE_START_DATE"
      Data_Source:
        type: "string"
        description: "  Source system that data originates from"
  Agency_Address:
    properties:
      Address_1:
        type: "string"
        description: "Agency's street address"
      Address_2:
        type: "string"
        description: "Agency's extended address which could include apt"
      City:
        type: "string"
        description: "Agency's city of business"
      State:
        type: "string"
        description: "Agency's state of business"
      ZipCode:
        type: "string"
        description: "Agency's Zipcode/PostalCode"
      County:
        type: "string"
        description: "Agency's County"
  Client_Address:
    properties:
      Address_1:
        type: "string"
        description: "Client's street address"
      Address_2:
        type: "string"
        description: "Client's extended address which could include apt"
      City:
        type: "string"
        description: "Client's city of residence"
      State:
        type: "string"
        description: "Client's state of residence"
      Zip_Code:
        type: "string"
        description: "Client's Zipcode/PostalCode"
x-amazon-apigateway-request-validators:
  Validate body, query string parameters, and headers:
    validateRequestParameters: true
    validateRequestBody: true
x-aws-api-id: "pau20tt9ah"
